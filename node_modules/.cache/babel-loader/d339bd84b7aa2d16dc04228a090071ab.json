{"ast":null,"code":"import _classCallCheck from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maddie/Desktop/messengerFront/src/components/User.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setRecipientState as _setRecipientState } from '../actions/actions';\nimport { Link } from 'react-router-dom';\nimport { newConversation as _newConversation } from '../actions/actions';\nimport { withRouter } from 'react-router-dom';\nimport socket from '../sockets';\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, User);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(User)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleRecipientPicked = function (event) {\n      //this is not redering ever time that i reload the page need to see if I can set it in App.js\n      _this.props.setRecipientState(_this.props.user); //need to post a conversation on the back end\n      //link user to the conversation component using Link\n      //with router part of react router dom\n\n\n      var currentUser = localStorage.token;\n      var recipientId = _this.props.user._id;\n      var capitalizedFirstName = \"\".concat(_this.props.user.profile.firstName[0].toUpperCase()).concat(_this.props.user.profile.firstName.slice(1));\n      var capitalizedLastName = \"\".concat(_this.props.user.profile.lastName[0].toUpperCase()).concat(_this.props.user.profile.lastName.slice(1));\n      var fullName = \"\".concat(capitalizedFirstName, \" \").concat(capitalizedLastName);\n      var message = \"Welcome you have started a conversation with \".concat(fullName, \".\");\n\n      _this.props.newConversation(currentUser, recipientId, message).then(function (resp) {\n        return socket.emit('enter conversation', resp.conversationId);\n      }); //.then((resp) => this.props.history.push(`/conversations/${resp.conversationId}`))\n      //once I have the new conversationId make it the selected conversation id in the redux store\n      //withRouter re-route to conversation component\n\n    };\n\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.recipient, 'currently console.logging the recipient as a prop');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        onMouseDown: this.handleRecipientPicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.user.profile.firstName, \" \", this.props.user.profile.lastName));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nvar dispatchStateToProps = function dispatchStateToProps(dispatch) {\n  return {\n    setRecipientState: function setRecipientState(recipient) {\n      return dispatch(_setRecipientState(recipient));\n    },\n    newConversation: function newConversation(user, recipientId, message) {\n      return dispatch(_newConversation(user, recipientId, message));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  setRecipientState: _setRecipientState,\n  newConversation: _newConversation\n})(User));","map":{"version":3,"sources":["/Users/maddie/Desktop/messengerFront/src/components/User.js"],"names":["React","Component","connect","setRecipientState","Link","newConversation","withRouter","socket","User","handleRecipientPicked","event","props","user","currentUser","localStorage","token","recipientId","_id","capitalizedFirstName","profile","firstName","toUpperCase","slice","capitalizedLastName","lastName","fullName","message","then","resp","emit","conversationId","console","log","recipient","mapStateToProps","state","dispatchStateToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAiB,IAAjBA,kBAAT,QAAkC,oBAAlC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,eAAe,IAAfA,gBAAT,QAAgC,oBAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,YAAnB;;IAGMC,I;;;;;;;;;;;;;;;;;;UAKFC,qB,GAAwB,UAACC,KAAD,EAAW;AACjC;AACA,YAAKC,KAAL,CAAWR,iBAAX,CAA6B,MAAKQ,KAAL,CAAWC,IAAxC,EAFiC,CAGjC;AACA;AACA;;;AACA,UAAMC,WAAW,GAAGC,YAAY,CAACC,KAAjC;AACA,UAAMC,WAAW,GAAG,MAAKL,KAAL,CAAWC,IAAX,CAAgBK,GAApC;AACA,UAAMC,oBAAoB,aAAM,MAAKP,KAAL,CAAWC,IAAX,CAAgBO,OAAhB,CAAwBC,SAAxB,CAAkC,CAAlC,EAAqCC,WAArC,EAAN,SAA2D,MAAKV,KAAL,CAAWC,IAAX,CAAgBO,OAAhB,CAAwBC,SAAxB,CAAkCE,KAAlC,CAAwC,CAAxC,CAA3D,CAA1B;AACA,UAAMC,mBAAmB,aAAM,MAAKZ,KAAL,CAAWC,IAAX,CAAgBO,OAAhB,CAAwBK,QAAxB,CAAiC,CAAjC,EAAoCH,WAApC,EAAN,SAA0D,MAAKV,KAAL,CAAWC,IAAX,CAAgBO,OAAhB,CAAwBK,QAAxB,CAAiCF,KAAjC,CAAuC,CAAvC,CAA1D,CAAzB;AACA,UAAMG,QAAQ,aAAMP,oBAAN,cAA8BK,mBAA9B,CAAd;AACA,UAAMG,OAAO,0DAAmDD,QAAnD,MAAb;;AACA,YAAKd,KAAL,CAAWN,eAAX,CAA2BQ,WAA3B,EAAwCG,WAAxC,EAAqDU,OAArD,EACCC,IADD,CACM,UAAAC,IAAI;AAAA,eAAIrB,MAAM,CAACsB,IAAP,CAAY,oBAAZ,EAAkCD,IAAI,CAACE,cAAvC,CAAJ;AAAA,OADV,EAZiC,CAejC;AACA;AACA;;AACD,K;;;;;;;6BAEO;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWsB,SAAvB,EAAkC,mDAAlC;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,WAAW,EAAE,KAAKxB,qBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8C,KAAKE,KAAL,CAAWC,IAAX,CAAgBO,OAAhB,CAAwBC,SAAtE,OAAkF,KAAKT,KAAL,CAAWC,IAAX,CAAgBO,OAAhB,CAAwBK,QAA1G,CADF,CADF;AAMD;;;;EAjCcvB,S;;AAmCnB,IAAMiC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAU;AAChC,SAAOA,KAAP;AACD,CAFD;;AAKA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,QAAD,EAAc;AACzC,SAAO;AACJlC,IAAAA,iBAAiB,EAAE,2BAAC8B,SAAD;AAAA,aAAeI,QAAQ,CAAClC,kBAAiB,CAAC8B,SAAD,CAAlB,CAAvB;AAAA,KADf;AAEJ5B,IAAAA,eAAe,EAAE,yBAACO,IAAD,EAAOI,WAAP,EAAoBU,OAApB;AAAA,aAAgCW,QAAQ,CAAChC,gBAAe,CAACO,IAAD,EAAOI,WAAP,EAAoBU,OAApB,CAAhB,CAAxC;AAAA;AAFb,GAAP;AAID,CALD;;AAOA,eAAepB,UAAU,CAACJ,OAAO,CAACgC,eAAD,EAAiB;AAAE/B,EAAAA,iBAAiB,EAAjBA,kBAAF;AAAoBE,EAAAA,eAAe,EAAfA;AAApB,CAAjB,CAAP,CAA+DG,IAA/D,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setRecipientState } from '../actions/actions';\nimport {Link} from 'react-router-dom';\nimport { newConversation } from '../actions/actions';\nimport { withRouter } from 'react-router-dom';\nimport socket from '../sockets';\n\n\nclass User extends Component {\n  //This component will render the user name and the user last Name\n  //This component set the recipient state in the store\n  //This component will need to dispatch a newConversation action\n  //This component will need to link to a conversation component\n    handleRecipientPicked = (event) => {\n      //this is not redering ever time that i reload the page need to see if I can set it in App.js\n      this.props.setRecipientState(this.props.user)\n      //need to post a conversation on the back end\n      //link user to the conversation component using Link\n      //with router part of react router dom\n      const currentUser = localStorage.token;\n      const recipientId = this.props.user._id;\n      const capitalizedFirstName = `${this.props.user.profile.firstName[0].toUpperCase()}${this.props.user.profile.firstName.slice(1)}`;\n      const capitalizedLastName = `${this.props.user.profile.lastName[0].toUpperCase()}${this.props.user.profile.lastName.slice(1)}`;\n      const fullName = `${capitalizedFirstName} ${capitalizedLastName}`;\n      const message = `Welcome you have started a conversation with ${fullName}.`;\n      this.props.newConversation(currentUser, recipientId, message)\n      .then(resp => socket.emit('enter conversation', resp.conversationId));\n\n      //.then((resp) => this.props.history.push(`/conversations/${resp.conversationId}`))\n      //once I have the new conversationId make it the selected conversation id in the redux store\n      //withRouter re-route to conversation component\n    }\n\n    render(){\n      console.log(this.props.recipient, 'currently console.logging the recipient as a prop')\n      return (\n        <div>\n          <h1 onMouseDown={this.handleRecipientPicked}>{this.props.user.profile.firstName} {this.props.user.profile.lastName}\n          </h1>\n        </div>\n      )\n    }\n}\nconst mapStateToProps = (state) =>{\n  return state\n}\n\n\nconst dispatchStateToProps = (dispatch) => {\n  return {\n     setRecipientState: (recipient) => dispatch(setRecipientState(recipient)),\n     newConversation: (user, recipientId, message) => dispatch(newConversation(user, recipientId, message))\n   }\n}\n\nexport default withRouter(connect(mapStateToProps,{ setRecipientState,newConversation })(User));\n"]},"metadata":{},"sourceType":"module"}