{"ast":null,"code":"var _jsxFileName = \"/Users/maddie/Desktop/messengerFront/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers/reducer';\nimport index from './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport './sockets'; //need to still import semantic UI will need to look at mod4 frontend to see how to do it\n//properly\n// + const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// + const store = createStore(reducer, /* preloadedState, */ composeEnhancers(\n// - const store = createStore(reducer, /* preloadedState, */ compose(\n//     applyMiddleware(...middleware)\n//   ));\n\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}))), document.getElementById('root'));\nexport default store; // ReactDOM.render(<App />, document.getElementById('root'));\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/maddie/Desktop/messengerFront/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","compose","BrowserRouter","reduxThunk","reducers","index","App","serviceWorker","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,kCAAP;AACA,OAAO,WAAP,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CT,OAAxE;AAEA,IAAMU,KAAK,GAAGZ,WAAW,CAACK,QAAD,EAAWI,gBAAgB,CAACR,eAAe,CAACG,UAAD,CAAhB,CAA3B,CAAzB;AAEAN,QAAQ,CAACe,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;AAQA,eAAeH,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './reducers/reducer';\nimport index from './index.css';\nimport App from './components/App.js';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport './sockets';\n\n\n//need to still import semantic UI will need to look at mod4 frontend to see how to do it\n//properly\n// + const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// + const store = createStore(reducer, /* preloadedState, */ composeEnhancers(\n// - const store = createStore(reducer, /* preloadedState, */ compose(\n//     applyMiddleware(...middleware)\n//   ));\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'));\n\nexport default store\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}