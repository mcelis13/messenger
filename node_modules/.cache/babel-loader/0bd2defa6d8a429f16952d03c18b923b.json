{"ast":null,"code":"import _classCallCheck from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maddie/Desktop/messengerFront/src/components/ConversationTile.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendMessage } from '../actions/actions';\nimport Message from './Message.js';\nimport { singleConversation as _singleConversation } from '../actions/actions'; //conversation tile\n\nvar ConversationTile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ConversationTile, _Component);\n\n  function ConversationTile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ConversationTile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConversationTile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function (event, state) {\n      event.preventDefault();\n\n      _this.props.singleConversation(_this.props.conversation._id);\n    };\n\n    return _this;\n  }\n\n  _createClass(ConversationTile, [{\n    key: \"render\",\n    value: function render() {\n      var user = this.props.currentUser; //need to set recipient new recipient when we get here! so I need to look at the getConversationId\n      //and go find the recipient based on their id in the conversation\n\n      console.log(this.props.recipient, 'my messages in conversationTile');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, user.profile ? React.createElement(\"div\", {\n        onClick: this.handleClick,\n        className: \"ui small card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"right floated meta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.currentUser.profile.firstName, \" \", this.props.currentUser.profile.lastName, \" CLICK TO SEE MESSAGES\"))) : React.createElement(\"button\", {\n        class: \"ui secondary loading button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Loading\"));\n    }\n  }]);\n\n  return ConversationTile;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return state;\n};\n\nvar dispatchStateToProps = function dispatchStateToProps(dispatch) {\n  return {\n    singleConversation: function singleConversation(conversationId) {\n      return dispatch(_singleConversation(conversationId));\n    }\n  };\n}; //needs to go above were recipient name belongs\n//<div className=\"right floated meta\">{this.props.recipient.profile.firstName} {this.props.recipient.profile.lastName}</div>\n// <div className=\"content\">\n// Click to see messages\n// {/*this.props.currentConversation.messages && this.props.currentConversation.messages.length > 0 ? <div className='description'>{this.props.currentConversation.messages[this.props.currentConversation.messages.length -1].body}</div><div>Click to see messages</div>*/}\n// </div>\n\n\nexport default connect(mapStateToProps, dispatchStateToProps)(ConversationTile);","map":{"version":3,"sources":["/Users/maddie/Desktop/messengerFront/src/components/ConversationTile.js"],"names":["React","Component","connect","sendMessage","Message","singleConversation","ConversationTile","handleClick","event","state","preventDefault","props","conversation","_id","user","currentUser","console","log","recipient","profile","firstName","lastName","mapStateToProps","dispatchStateToProps","dispatch","conversationId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAAQC,kBAAkB,IAAlBA,mBAAR,QAAiC,oBAAjC,C,CAEA;;IACMC,gB;;;;;;;;;;;;;;;;;;UAYFC,W,GAAc,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC9BD,MAAAA,KAAK,CAACE,cAAN;;AACA,YAAKC,KAAL,CAAWN,kBAAX,CAA8B,MAAKM,KAAL,CAAWC,YAAX,CAAwBC,GAAtD;AACD,K;;;;;;;6BAEK;AACN,UAAIC,IAAI,GAAG,KAAKH,KAAL,CAAWI,WAAtB,CADM,CAEN;AACA;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWO,SAAvB,EAAkC,iCAAlC;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCJ,IAAI,CAACK,OAAL,GACA;AAAK,QAAA,OAAO,EAAE,KAAKZ,WAAnB;AAAgC,QAAA,SAAS,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAKI,KAAL,CAAWI,WAAX,CAAuBI,OAAvB,CAA+BC,SAApE,OAAgF,KAAKT,KAAL,CAAWI,WAAX,CAAuBI,OAAvB,CAA+BE,QAA/G,2BADF,CADD,CADA,GAKS;AAAQ,QAAA,KAAK,EAAC,6BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANV,CADF;AAUD;;;;EAhC4BpB,S;;AAmC/B,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAACb,KAAD,EAAU;AAChC,SAAOA,KAAP;AACD,CAFD;;AAIA,IAAMc,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,QAAD,EAAc;AACzC,SAAO;AAACnB,IAAAA,kBAAkB,EAAE,4BAACoB,cAAD;AAAA,aAAoBD,QAAQ,CAACnB,mBAAkB,CAACoB,cAAD,CAAnB,CAA5B;AAAA;AAArB,GAAP;AACD,CAFD,C,CAIA;AACA;AACA;AACA;AACA;AACA;;;AAGA,eAAevB,OAAO,CAACoB,eAAD,EAAkBC,oBAAlB,CAAP,CAA+CjB,gBAA/C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {sendMessage} from '../actions/actions';\nimport Message from './Message.js';\nimport {singleConversation} from '../actions/actions';\n\n//conversation tile\nclass ConversationTile extends Component {\n\n//IN HERE I NEED THE CONVERSATION RECIPIENT AND THE FIRST MESSAGE TO display\n//THIS COMPONENT ALSO NEEDS A ONCLICK FUNCTION THAT WILL DISPLAY THE FULL\n//CONVERSATION ON THE SIDE\n\n//This no longer goes in this component this will go in the component that makes new messages\n//that would be the conversation component\n    // handleMessageInput = (event) =>{\n    //   this.setState({[event.target.name]: event.target.value})\n    // }\n    //\n    handleClick = (event, state) => {\n      event.preventDefault()\n      this.props.singleConversation(this.props.conversation._id)\n    }\n\n  render(){\n    let user = this.props.currentUser;\n    //need to set recipient new recipient when we get here! so I need to look at the getConversationId\n    //and go find the recipient based on their id in the conversation\n    console.log(this.props.recipient, 'my messages in conversationTile')\n    return (\n      <div>\n      {user.profile ?\n      (<div onClick={this.handleClick} className=\"ui small card\">\n        <div className=\"content\">\n          <div className=\"right floated meta\">{this.props.currentUser.profile.firstName} {this.props.currentUser.profile.lastName} CLICK TO SEE MESSAGES</div>\n        </div>\n      </div>) : <button class=\"ui secondary loading button\">Loading</button>}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return state\n}\n\nconst dispatchStateToProps = (dispatch) => {\n  return {singleConversation: (conversationId) => dispatch(singleConversation(conversationId))}\n}\n\n//needs to go above were recipient name belongs\n//<div className=\"right floated meta\">{this.props.recipient.profile.firstName} {this.props.recipient.profile.lastName}</div>\n// <div className=\"content\">\n// Click to see messages\n// {/*this.props.currentConversation.messages && this.props.currentConversation.messages.length > 0 ? <div className='description'>{this.props.currentConversation.messages[this.props.currentConversation.messages.length -1].body}</div><div>Click to see messages</div>*/}\n// </div>\n\n\nexport default connect(mapStateToProps, dispatchStateToProps)(ConversationTile);\n"]},"metadata":{},"sourceType":"module"}