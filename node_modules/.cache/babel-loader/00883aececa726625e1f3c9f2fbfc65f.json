{"ast":null,"code":"import _classCallCheck from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/maddie/Desktop/messengerFront/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/maddie/Desktop/messengerFront/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Nav from './Nav';\nimport Footer from './Footer';\nimport Homepage from './pages/Homepage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport Register from './auth/Register';\nimport Login from './auth/Login';\nimport Dashboard from './Dashboard';\nimport SearchUser from './SearchUser';\nimport Conversation from './Conversation';\nimport ConversationList from './ConversationList';\nimport { getUserAgain as _getUserAgain } from '../actions/actions';\nimport { getUsers as _getUsers } from '../actions/actions';\nimport { getConversations as _getConversations } from '../actions/actions';\nimport { getMessages as _getMessages } from '../actions/actions';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //re-setting the currentUser\n      var token = localStorage.getItem(\"token\");\n\n      if (token) {\n        this.props.getUserAgain(token);\n      } //go get all users\n\n\n      this.props.getUsers(); //go get all user conversations\n\n      this.props.getConversations(localStorage.token); //go get all messages\n\n      this.props.getMessages();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"// \", React.createElement(Route, {\n        exact: true,\n        path: \"/conversations/:conversationId\",\n        component: Conversation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/register\",\n        component: Register,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard\",\n        component: Dashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Homepage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Route, {\n        component: NotFoundPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component); //<Footer />/\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nvar dispatchStateToProps = function dispatchStateToProps(dispatch) {\n  return {\n    getUserAgain: function getUserAgain(token) {\n      return dispatch(_getUserAgain(token));\n    },\n    getUsers: function getUsers() {\n      return dispatch(_getUsers());\n    },\n    getConversations: function getConversations(token) {\n      return dispatch(_getConversations(token));\n    },\n    getMessages: function getMessages() {\n      return dispatch(_getMessages());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, dispatchStateToProps)(App);","map":{"version":3,"sources":["/Users/maddie/Desktop/messengerFront/src/components/App.js"],"names":["React","Component","connect","BrowserRouter","Router","Route","Switch","Redirect","Nav","Footer","Homepage","NotFoundPage","Register","Login","Dashboard","SearchUser","Conversation","ConversationList","getUserAgain","getUsers","getConversations","getMessages","App","token","localStorage","getItem","props","mapStateToProps","state","currentUser","dispatchStateToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Nav  from './Nav';\nimport Footer  from './Footer';\nimport Homepage from './pages/Homepage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport Register from './auth/Register';\nimport Login from './auth/Login';\nimport Dashboard from './Dashboard';\nimport SearchUser from './SearchUser';\nimport Conversation from './Conversation';\nimport ConversationList from './ConversationList';\nimport { getUserAgain } from '../actions/actions';\nimport { getUsers } from '../actions/actions';\nimport { getConversations } from '../actions/actions';\nimport { getMessages } from '../actions/actions';\n\n\nclass App extends Component {\n  componentDidMount(){\n    //re-setting the currentUser\n    const token = localStorage.getItem(\"token\");\n      if (token) {\n        this.props.getUserAgain(token)\n      }\n\n      //go get all users\n      this.props.getUsers();\n\n      //go get all user conversations\n      this.props.getConversations(localStorage.token);\n\n      //go get all messages\n      this.props.getMessages();\n  }\n\n  render() {\n    return (\n      <Router>\n          <div className=\"App\">\n          <Nav/>\n          {/* < SearchUser />*/}\n          < Switch >\n            // <Route exact path='/conversations/:conversationId' component={Conversation} />\n            <Route exact path='/login' component={Login}/>\n            <Route exact path='/register' component={Register} />\n            <Route exact path='/dashboard' component={Dashboard}/>\n            <Route exact path='/' component={Homepage} />\n            <Route component={NotFoundPage}/>\n          < /Switch >\n          </div>\n      </Router>\n    );\n  }\n}\n\n//<Footer />/\n\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser:state.currentUser\n  }\n}\n\nconst dispatchStateToProps = (dispatch) => {\n  return {\n    getUserAgain: (token) => dispatch(getUserAgain(token)),\n    getUsers: () => dispatch(getUsers()),\n    getConversations: (token) => dispatch(getConversations(token)),\n    getMessages: () => dispatch(getMessages())\n  }\n}\n\nexport default connect(mapStateToProps, dispatchStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}