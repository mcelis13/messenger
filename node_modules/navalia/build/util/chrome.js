"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const _ = require("lodash");
const axios_1 = require("axios");
const chromeLauncher = require("chrome-launcher");
const CDP = require("chrome-remote-interface");
exports.defaultFlags = {
    headless: true,
    disableGpu: true,
    hideScrollbars: true,
};
exports.transformChromeFlags = (flags) => {
    return _.chain(flags)
        .pickBy(value => value)
        .map((value, key) => {
        const cliSwitch = `--${_.kebabCase(key)}`;
        if (_.isBoolean(value) && value) {
            return cliSwitch;
        }
        return `${cliSwitch}=${value}`;
    })
        .value();
};
exports.launch = (flags, isHost = false, remote) => __awaiter(this, void 0, void 0, function* () {
    const logLevel = process.env.DEBUG &&
        (process.env.DEBUG.includes('ChromeLauncher') ||
            process.env.DEBUG.includes('*'))
        ? 'info'
        : 'silent';
    const chromeFlags = exports.transformChromeFlags(flags);
    const browser = remote
        ? Object.assign({}, remote, { kill: function () { }, pid: null })
        : yield chromeLauncher.launch({
            chromeFlags,
            logLevel,
        });
    const browserDebuggerURL = isHost
        ? yield axios_1.default
            .get(`ws://localhost:${browser.port}/json/version`)
            .then(res => res.data.webSocketDebuggerUrl)
        : '';
    const cdp = isHost
        ? yield CDP(remote || { target: browserDebuggerURL })
        : yield CDP(remote || { port: browser.port });
    yield Promise.all(isHost
        ? []
        : [
            cdp.Page.enable(),
            cdp.Runtime.enable(),
            cdp.Network.enable(),
            cdp.DOM.enable(),
            cdp.CSS.enable(),
        ]);
    return {
        browser,
        cdp,
    };
});
exports.createTab = (cdp, port) => __awaiter(this, void 0, void 0, function* () {
    const { browserContextId } = cdp.Target.createBrowserContext();
    const { targetId } = yield cdp.Target.createTarget({
        url: 'about:blank',
        browserContextId,
    });
    const tab = yield CDP({
        tab: `ws://localhost:${port}/devtools/page/${targetId}`,
    });
    yield Promise.all([
        tab.Page.enable(),
        tab.Runtime.enable(),
        tab.Network.enable(),
        tab.DOM.enable(),
        tab.CSS.enable(),
    ]);
    return {
        tab,
        targetId,
    };
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hyb21lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvY2hyb21lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSw0QkFBNEI7QUFDNUIsaUNBQTBCO0FBQzFCLGtEQUFrRDtBQUNsRCwrQ0FBK0M7QUFpQ2xDLFFBQUEsWUFBWSxHQUFVO0lBQ2pDLFFBQVEsRUFBRSxJQUFJO0lBQ2QsVUFBVSxFQUFFLElBQUk7SUFDaEIsY0FBYyxFQUFFLElBQUk7Q0FDckIsQ0FBQztBQUVXLFFBQUEsb0JBQW9CLEdBQUcsQ0FBQyxLQUFZLEVBQUUsRUFBRTtJQUNuRCxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7U0FDbEIsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO1NBQ3RCLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxHQUFHLEVBQUUsRUFBRTtRQUNsQixNQUFNLFNBQVMsR0FBRyxLQUFLLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQztRQUMxQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDaEMsTUFBTSxDQUFDLFNBQVMsQ0FBQztRQUNuQixDQUFDO1FBQ0QsTUFBTSxDQUFDLEdBQUcsU0FBUyxJQUFJLEtBQUssRUFBRSxDQUFDO0lBQ2pDLENBQUMsQ0FBQztTQUNELEtBQUssRUFBRSxDQUFDO0FBQ2IsQ0FBQyxDQUFDO0FBR1csUUFBQSxNQUFNLEdBQUcsQ0FDcEIsS0FBWSxFQUNaLFNBQWtCLEtBQUssRUFDdkIsTUFBZSxFQUNVLEVBQUU7SUFDM0IsTUFBTSxRQUFRLEdBQ1osT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLO1FBQ2pCLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLGdCQUFnQixDQUFDO1lB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