"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("graphql");
exports.goto = {
    type: new graphql_1.GraphQLObjectType({
        name: 'goto',
        fields: () => ({
            url: {
                type: graphql_1.GraphQLString,
                description: `The final URL of the page (after any re-directs)`,
            },
        }),
    }),
    description: `Navigates the browser to the webpage specified via the 'url' argument. Returns a boolean indicating success`,
    args: {
        url: {
            description: `The page or website you want to navigate to`,
            type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString),
        },
        coverage: {
            type: graphql_1.GraphQLBoolean,
            defaultValue: false,
            description: `Tools the browser to collect coverage information on a downstream request`,
        },
        pageload: {
            type: graphql_1.GraphQLBoolean,
            defaultValue: true,
            description: `Wether or not to wait for the 'pageload' event before proceeding`,
        },
    },
    resolve(_, args, context) {
        const { loader } = context;
        return loader.run((chrome) => __awaiter(this, void 0, void 0, function* () {
            return chrome
                .goto(args.url, {
                coverage: args.coverage,
                pageload: args.pageload,
            })
                .then(url => {
                return { url };
            });
        }));
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ290by5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ncmFwaHFsL3R5cGVzL2dvdG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLHFDQUtpQjtBQUVKLFFBQUEsSUFBSSxHQUFHO0lBQ2xCLElBQUksRUFBRSxJQUFJLDJCQUFpQixDQUFDO1FBQzFCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDYixHQUFHLEVBQUU7Z0JBQ0gsSUFBSSxFQUFFLHVCQUFhO2dCQUNuQixXQUFXLEVBQUUsa0RBQWtEO2FBQ2hFO1NBQ0YsQ0FBQztLQUNILENBQUM7SUFDRixXQUFXLEVBQUUsNkdBQTZHO0lBQzFILElBQUksRUFBRTtRQUNKLEdBQUcsRUFBRTtZQUNILFdBQVcsRUFBRSw2Q0FBNkM7WUFDMUQsSUFBSSxFQUFFLElBQUksd0JBQWMsQ0FBQyx1QkFBYSxDQUFDO1NBQ3hDO1FBQ0QsUUFBUSxFQUFFO1lBQ1IsSUFBSSxFQUFFLHdCQUFjO1lBQ3BCLFlBQVksRUFBRSxLQUFLO1lBQ25CLFdBQVcsRUFBRSwyRUFBMkU7U0FDekY7UUFDRCxRQUFRLEVBQUU7WUFDUixJQUFJLEVBQUUsd0JBQWM7WUFDcEIsWUFBWSxFQUFFLElBQUk7WUFDbEIsV0FBVyxFQUFFLGtFQUFrRTtTQUNoRjtLQUNGO0lBQ0QsT0FBTyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTztRQUN0QixNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDO1FBRTNCLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQU0sTUFBTSxFQUFDLEVBQUU7WUFDL0IsTUFBTSxDQUFDLE1BQU07aUJBQ1YsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JBQ2QsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO2dCQUN2QixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7YUFDeEIsQ0FBQztpQkFDRCxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQ1YsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7WUFDakIsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUEsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGLENBQUMifQ==