"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = require("graphql");
const dom_types_1 = require("../dom-types");
exports.type = {
    type: new graphql_1.GraphQLObjectType({
        name: 'type',
        fields: () => ({
            typed: {
                type: graphql_1.GraphQLBoolean,
                description: `Whether or not the text was successfully typed.`,
            },
        }),
    }),
    description: `The type method allows you to type text into an element. It accepts two arguments: the css-style selector of the element you want to enter text into, and a string of text to input.`,
    args: Object.assign({}, dom_types_1.domArgs, { selector: {
            description: `The selector of the element you wish to type into`,
            type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString),
        }, text: {
            description: `The text you want to type into the element`,
            type: new graphql_1.GraphQLNonNull(graphql_1.GraphQLString),
        } }),
    resolve(_, args, context) {
        const { loader } = context;
        return loader.run(chrome => {
            return chrome
                .type(args.selector, args.text, {
                wait: args.wait,
                timeout: args.timeout,
            })
                .then(typed => {
                return { typed };
            });
        });
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9ncmFwaHFsL3R5cGVzL3R5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxxQ0FLaUI7QUFDakIsNENBQXVDO0FBRTFCLFFBQUEsSUFBSSxHQUFHO0lBQ2xCLElBQUksRUFBRSxJQUFJLDJCQUFpQixDQUFDO1FBQzFCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDYixLQUFLLEVBQUU7Z0JBQ0wsSUFBSSxFQUFFLHdCQUFjO2dCQUNwQixXQUFXLEVBQUUsaURBQWlEO2FBQy9EO1NBQ0YsQ0FBQztLQUNILENBQUM7SUFDRixXQUFXLEVBQUUsc0xBQXNMO0lBQ25NLElBQUksb0JBQ0MsbUJBQU8sSUFDVixRQUFRLEVBQUU7WUFDUixXQUFXLEVBQUUsbURBQW1EO1lBQ2hFLElBQUksRUFBRSxJQUFJLHdCQUFjLENBQUMsdUJBQWEsQ0FBQztTQUN4QyxFQUNELElBQUksRUFBRTtZQUNKLFdBQVcsRUFBRSw0Q0FBNEM7WUFDekQsSUFBSSxFQUFFLElBQUksd0JBQWMsQ0FBQyx1QkFBYSxDQUFDO1NBQ3hDLEdBQ0Y7SUFDRCxPQUFPLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxPQUFPO1FBQ3RCLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUM7UUFFM0IsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDekIsTUFBTSxDQUFDLE1BQU07aUJBQ1YsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDOUIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO2dCQUNmLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTzthQUN0QixDQUFDO2lCQUNELElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDWixNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsQ0FBQztZQUNuQixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUNGLENBQUMifQ==